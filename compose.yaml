services:
  traefik:
    image: traefik:v2.9
    extra_hosts:
      - localhost:host-gateway
    container_name: traefik
    volumes:
      - ./traefik.yaml:/etc/traefik/config.yml:ro
    command:
      - "--api.dashboard=false"
      - "--providers.file.filename=/etc/traefik/config.yml"
      - "--entryPoints.http.address=:80"
      - "--ping=true"
      - "--entryPoints.ping.address=:8082"
      - "--ping.entryPoint=ping"
    ports:
      - 80:80
    healthcheck:
      test:
        [
          "CMD",
          "traefik",
          "healthcheck",
          "--entrypoints.ping.address=:8082",
          "--ping.entryPoint=ping",
          "--ping",
        ]
      interval: 5s
      retries: 3
      start_period: 3s
      timeout: 3s

  backend:
    image: gradle:7-jdk17
    user: ${MY_UID}:${MY_GID}
    extra_hosts:
      - localhost:host-gateway
    container_name: backend
    volumes:
      - ./:/app
      - gradle-cache:/root/.gradle/caches
    working_dir: /app
    environment:
      - SPRING_PROFILES_ACTIVE=local,compose
      - GH_PACKAGES_REPOSITORY_USER=${GH_PACKAGES_REPOSITORY_USER}
      - GH_PACKAGES_REPOSITORY_TOKEN=${GH_PACKAGES_REPOSITORY_TOKEN}
      - OAUTH2_CLIENT_ISSUER=${OAUTH2_CLIENT_ISSUER}
      - OAUTH2_CLIENT_ID=${OAUTH2_CLIENT_ID}
      - OAUTH2_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}
      - JAVA_OPTS=-XX:MaxDirectMemorySize=100M
    command: sh run.sh _start
    depends_on:
      - traefik
      - db
      - redis
    ports:
      - 8080:8080
    healthcheck:
      test: curl --silent --fail http://127.0.0.1:8080/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 3s

  frontend:
    build: ./frontend
    extra_hosts:
      - localhost:host-gateway
    container_name: frontend
    volumes:
      - ./frontend/src/:/usr/src/app/src
    environment:
      - BACKEND_HOST=http://127.0.0.1
    command: npm run dev -- --host
    depends_on:
      - traefik
    ports:
      - 3000:3000
    healthcheck:
      test: curl --silent --fail --request GET http://127.0.0.1:3000 || exit 1
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  db:
    image: postgres:12-alpine
    extra_hosts:
      - localhost:host-gateway
    restart: always
    container_name: db
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=neuris
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=test
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d neuris"]
      interval: 5s
      retries: 3
      start_period: 5s
      timeout: 3s

  redis:
    image: cgr.dev/chainguard/redis:7.0
    extra_hosts:
      - localhost:host-gateway
    container_name: redis
    command:
      - "--maxmemory 256mb"
      - "--maxmemory-policy allkeys-lru"
      - "--timeout 300"
      - "--tcp-keepalive 10"
      - "--user redis on +@all -CONFIG ~* >password"
      - "--user default off resetchannels -@all"
    ports:
      - "6379:6379"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli -h 127.0.0.1 --user redis -a password PING | grep 'PONG' || exit 1",
        ]
      interval: 5s
      retries: 5
      start_period: 3s
      timeout: 5s

volumes:
  db-data:
  gradle-cache:
